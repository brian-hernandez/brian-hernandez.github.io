{"version":3,"sources":["game0.js"],"names":[],"mappings":";;AAAA;;;;AAIA;AACA,IAAI,YAAY,KAAK,SAArB;AAAA,IACI,qBAAqB,KAAK,kBAD9B;AAAA,IAEI,eAAe,KAAK,KAAL,CAAW,YAF9B;AAAA,IAGI,SAAS,KAAK,MAHlB;AAAA,IAII,YAAY,KAAK,MAAL,CAAY,SAJ5B;AAAA,IAKI,SAAS,KAAK,MALlB;AAAA,IAMI,OAAO,KAAK,IANhB;;AAQA;AACA,IAAI,QAAQ,IAAI,SAAJ,EAAZ;AAAA,IACI,WAAW,mBAAmB,GAAnB,EAAwB,GAAxB,CADf,C,CAC6C;AAC7C,SAAS,IAAT,CAAc,WAAd,CAA0B,SAAS,IAAnC;;AAEA;AACA,SAAS,eAAT,GAA2B,QAA3B;AACA,SAAS,IAAT,CAAc,KAAd,CAAoB,MAApB,GAA6B,iBAA7B;;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,GAAP,CAAW,iBAAX,EAA8B,EAA9B,CAAiC,UAAjC,EAA6C,mBAA7C,EAAkE,IAAlE,CAAuE,KAAvE;;AAEA,SAAS,mBAAT,CAA6B,MAA7B,EAAqC,QAArC,EAA+C;AAC3C;AACA,YAAQ,GAAR,eAAwB,SAAS,GAAjC,EAF2C,CAEF;;AAEzC;AACA,YAAQ,GAAR,gBAAyB,OAAO,QAAhC;AAEH;;AAED;AACA,IAAI,aAAJ;AAAA,IAAU,cAAV;AAAA,IAAiB,cAAjB;AACA,IAAI,IAAI,IAAI,IAAJ,CAAS,IAAT,CAAR;;AAEA,SAAS,KAAT,GAAiB;AACb,YAAQ,GAAR,CAAY,kBAAZ;AACA,QAAI,KAAK,UAAU,iBAAV,EAA6B,QAAtC;;AAEA;AACA,QAAI,KAAK,IAAI,MAAJ,CAAW,GAAG,QAAH,CAAX,CAAT;AACA,UAAM,QAAN,CAAe,EAAf;;AAEA;AACA,WAAO,IAAI,MAAJ,CAAW,GAAG,UAAH,CAAX,CAAP;AACA,UAAM,QAAN,CAAe,IAAf;AACA,SAAK,QAAL,CAAc,GAAd,CAAkB,GAAlB,EAAuB,GAAvB,EAXa,CAWgB;AAC7B;AACA,SAAK,IAAL,GAAY,QAAZ;AACA,SAAK,EAAL,GAAU,CAAV;AACA,SAAK,EAAL,GAAU,CAAV;AACA,SAAK,aAAL,GAAqB,CAArB;AACA,SAAK,aAAL,GAAqB,CAArB;AACA,SAAK,SAAL,GAAiB,CAAjB;AACA,SAAK,SAAL,GAAiB,CAAjB;AACA,SAAK,KAAL,GAAa,IAAb;AACA,SAAK,IAAL,GAAY,IAAZ;;AAEA;AACA,QAAI,SAAS,IAAI,SAAJ,EAAb;;AAEA;AACA,QAAI,gBAAgB,CAApB;AAAA,QACI,UAAU,EADd;AAAA,QAEI,UAAU,GAFd;;AAIA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,aAApB,EAAmC,GAAnC,EAAwC;AACpC,gBAAQ,IAAI,MAAJ,CAAW,GAAG,UAAH,CAAX,CAAR;;AAEA,YAAI,IAAI,UAAU,CAAV,GAAc,OAAtB;AACA,YAAI,IAAI,UAAU,CAAV,EAAa,MAAM,MAAN,GAAe,MAAM,MAAlC,CAAR;AACA,cAAM,CAAN,GAAU,CAAV;AACA,cAAM,CAAN,GAAU,CAAV;AACA,cAAM,IAAN,GAAa,QAAb;AACA,eAAO,QAAP,CAAgB,KAAhB;AACA,cAAM,QAAN,CAAe,KAAf;AACH;;AAED;AACA,QAAI,IAAI,SAAS,EAAT,CAAR;AAAA,QACI,IAAI,SAAS,EAAT,CADR;AAAA,QAEI,IAAI,SAAS,EAAT,CAFR;AAAA,QAGI,IAAI,SAAS,EAAT,CAHR;;AAKA;AACA,MAAE,KAAF,GAAU,YAAM;AACZ,aAAK,aAAL,GAAqB,CAAC,KAAK,KAA3B;AACA,aAAK,SAAL,GAAiB,CAAjB;AACH,KAHD;;AAKA;AACA,MAAE,OAAF,GAAY,YAAM;AACd,YAAI,CAAC,EAAE,MAAP,EAAe;AACX,iBAAK,aAAL,GAAqB,CAArB;AACA,iBAAK,SAAL,GAAiB,KAAK,IAAtB;AACH;AACJ,KALD;;AAOA;AACA,MAAE,KAAF,GAAU,YAAM;AACZ,aAAK,aAAL,GAAqB,CAAC,KAAK,KAA3B;AACA,aAAK,SAAL,GAAiB,CAAjB;AACH,KAHD;;AAKA;AACA,MAAE,OAAF,GAAY,YAAM;AACd,YAAI,CAAC,EAAE,MAAP,EAAe;AACX,iBAAK,aAAL,GAAqB,CAArB;AACA,iBAAK,SAAL,GAAiB,KAAK,IAAtB;AACH;AACJ,KALD;;AAOA;AACA,MAAE,KAAF,GAAU,YAAM;AACZ,aAAK,aAAL,GAAqB,KAAK,KAA1B;AACA,aAAK,SAAL,GAAiB,CAAjB;AACH,KAHD;;AAKA;AACA,MAAE,OAAF,GAAY,YAAM;AACd,YAAI,CAAC,EAAE,MAAP,EAAe;AACX,iBAAK,aAAL,GAAqB,CAArB;AACA,iBAAK,SAAL,GAAiB,KAAK,IAAtB;AACH;AACJ,KALD;;AAOA;AACA,MAAE,KAAF,GAAU,YAAM;AACZ,aAAK,aAAL,GAAqB,KAAK,KAA1B;AACA,aAAK,SAAL,GAAiB,CAAjB;AACH,KAHD;;AAKA;AACA,MAAE,OAAF,GAAY,YAAM;AACd,YAAI,CAAC,EAAE,MAAP,EAAe;AACX,iBAAK,aAAL,GAAqB,CAArB;AACA,iBAAK,SAAL,GAAiB,KAAK,IAAtB;AACH;AACJ,KALD;;AAUA,YAAQ,IAAR;;AAEA;AACA;AAEH;;AAED,SAAS,QAAT,GAAoB;AAChB,0BAAsB,QAAtB;AACA;AACA,aAAS,MAAT,CAAgB,KAAhB;AACH;;AAED,SAAS,IAAT,GAAgB;AACZ;AACA,SAAK,EAAL,IAAW,KAAK,aAAhB;AACA,SAAK,EAAL,IAAW,KAAK,aAAhB;;AAEA;AACA,SAAK,EAAL,IAAW,KAAK,SAAhB;AACA,SAAK,EAAL,IAAW,KAAK,SAAhB;;AAEA;AACA,SAAK,EAAL,IAAW,GAAX;;AAEA;AACA,SAAK,CAAL,IAAU,KAAK,EAAf;AACA,SAAK,CAAL,IAAU,KAAK,EAAf;;AAEA,QAAI,YAAY,QACZ,IADY,EACN;AACF,WAAG,CADD;AAEF,WAAG,CAFD;AAGF,eAAO,SAAS,IAAT,CAAc,KAHnB;AAIF,gBAAQ,SAAS,IAAT,CAAc;AAJpB,KADM,CAAhB;AAQA,QAAI,SAAJ,EAAe;AACX;AACA,YAAI,UAAU,GAAV,CAAc,MAAd,KAAyB,UAAU,GAAV,CAAc,OAAd,CAA7B,EAAqD;AACjD,iBAAK,EAAL,GAAU,CAAV;AACH;AACD;AACA,YAAI,UAAU,GAAV,CAAc,KAAd,KAAwB,UAAU,GAAV,CAAc,QAAd,CAA5B,EAAqD;AACjD,iBAAK,EAAL,GAAU,CAAV;AACH;AACJ;;AAED,QAAG,EAAE,gBAAF,CAAmB,IAAnB,EAAyB,KAAzB,CAAH,EAAmC;AAC/B,gBAAQ,GAAR,CAAY,WAAZ;AACH,KAFD,MAEK;AACD,gBAAQ,GAAR,CAAY,cAAZ;AACH;AAGJ;;AAED;AACA,SAAS,SAAT,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B;AACzB,WAAO,KAAK,KAAL,CAAW,KAAK,MAAL,MAAiB,MAAM,GAAN,GAAY,CAA7B,CAAX,IAA8C,GAArD;AACH;;AAGD,OAAO,gBAAP,CAAwB,QAAxB,EAAkC,iBAAS;AACvC,kBAAc,SAAS,IAAvB;AACH,CAFD;;AAIA,IAAI,OAAO,SAAP,IAAO,GAAY;AACnB;AACA,YAAQ,GAAR,CAAY,qBAAqB,SAAS,IAAT,CAAc,KAA/C;AACA,YAAQ,GAAR,CAAY,sBAAsB,SAAS,IAAT,CAAc,MAAhD;;AAEA,QAAI,QAAQ,cAAc,SAAS,IAAvB,CAAZ;AACA;AACA,YAAQ,GAAR,CAAY,iDAAiD,KAA7D;AACH,CARD;;AAUA,SAAS,OAAT,CAAiB,MAAjB,EAAyB,SAAzB,EAAoC;AACpC;AACI,QAAI,YAAY,IAAI,GAAJ,EAAhB;AACJ;AACA;AACI,QAAI,OAAO,CAAP,GAAW,UAAU,CAAzB,EAA4B;AACxB,eAAO,CAAP,GAAW,UAAU,CAArB;AACA,kBAAU,GAAV,CAAc,MAAd;AACH;AACD;AACA,QAAI,OAAO,CAAP,GAAW,UAAU,CAAzB,EAA4B;AACxB,eAAO,CAAP,GAAW,UAAU,CAArB;AACA,kBAAU,GAAV,CAAc,KAAd;AACH;AACL;AACI,QAAI,OAAO,CAAP,GAAW,OAAO,KAAlB,GAA0B,UAAU,KAAxC,EAA+C;AAC3C,eAAO,CAAP,GAAW,UAAU,KAAV,GAAkB,OAAO,KAApC;AACA,kBAAU,GAAV,CAAc,OAAd;AACH;AACL;AACI,QAAI,OAAO,CAAP,GAAW,OAAO,MAAlB,GAA2B,UAAU,MAAzC,EAAiD;AAC7C,eAAO,CAAP,GAAW,UAAU,MAAV,GAAmB,OAAO,MAArC;AACA,kBAAU,GAAV,CAAc,QAAd;AACH;AACD;AACA,QAAI,UAAU,IAAV,KAAmB,CAAvB,EAA0B,YAAY,SAAZ;AAC1B;AACA,WAAO,SAAP;AACH;;AAGD","file":"game0-compiled.js","sourcesContent":["/**\n * Created by Brian on 9/13/16.\n */\n\n// Aliases\nlet Container = PIXI.Container,\n    autoDetectRenderer = PIXI.autoDetectRenderer,\n    TextureCache = PIXI.utils.TextureCache,\n    loader = PIXI.loader,\n    resources = PIXI.loader.resources,\n    Sprite = PIXI.Sprite,\n    Text = PIXI.Text;\n\n// Create the stage and renderer\nlet stage = new Container(),\n    renderer = autoDetectRenderer(720, 384); // Has a 3rd argument; {antialias: false, transparent: false, resoultion:1}\ndocument.body.appendChild(renderer.view);\n\n// Style customization\nrenderer.backgroundColor = 0xfebc19;\nrenderer.view.style.border = \"3px solid black\";\n\n// Make canvas fill entire window\n// renderer.view.style.position = \"absolute\";\n// renderer.view.style.width = window.innerWidth + \"px\";\n// renderer.view.style.height = window.innerHeight + \"px\";\n// renderer.view.style.display = \"block\";\n\nloader.add(\"./img/snow.json\").on(\"progress\", loadProgressHandler).load(setup);\n\nfunction loadProgressHandler(loader, resource) {\n    // Display the file `url` currently being loaded\n    console.log(`Loading: ${resource.url}`); // Example of an ES6 Template String\n\n    // Display teh percentage of files loaded\n    console.log(`Progress: ${loader.progress}%`);\n\n}\n\n// Variables used in more than one function\nlet tank, state, etank;\nlet b = new Bump(PIXI);\n\nfunction setup() {\n    console.log(\"All files loaded\");\n    let id = resources[\"./img/snow.json\"].textures;\n\n    // Background\n    let bg = new Sprite(id[\"bg.jpg\"]);\n    stage.addChild(bg);\n\n    // User Tank\n    tank = new Sprite(id[\"tank.gif\"]);\n    stage.addChild(tank);\n    tank.position.set(150, 355); // Set the size of the sprite\n    // tank.scale.set(1, 1); // Scale the sprite\n    tank.tint = 0xccff99;\n    tank.vx = 0;\n    tank.vy = 0;\n    tank.accelerationX = 0;\n    tank.accelerationY = 0;\n    tank.frictionX = 1;\n    tank.frictionY = 1;\n    tank.speed = 0.01;\n    tank.drag = 0.98;\n\n    // Evil tank\n    let eTanks = new Container();\n\n    // Making evil tanks\n    let numberOfTanks = 4,\n        spacing = 48,\n        xOffset = 150;\n\n    for (let i = 0; i < numberOfTanks; i++) {\n        etank = new Sprite(id[\"tank.gif\"]);\n\n        let x = spacing * i + xOffset;\n        let y = randomInt(0, stage.height - etank.height);\n        etank.x = x;\n        etank.y = y;\n        etank.tint = 0xff0000;\n        eTanks.addChild(etank);\n        stage.addChild(etank);\n    }\n\n    //Capture the WASD keyboard keys\n    var w = keyboard(87),\n        a = keyboard(65),\n        s = keyboard(83),\n        d = keyboard(68);\n\n    // LEFT Key Press\n    a.press = () => {\n        tank.accelerationX = -tank.speed;\n        tank.frictionX = 1;\n    };\n\n    // LEFT Key Release\n    a.release = () => {\n        if (!d.isDown) {\n            tank.accelerationX = 0;\n            tank.frictionX = tank.drag;\n        }\n    };\n\n    // UP Key Press\n    w.press = () => {\n        tank.accelerationY = -tank.speed;\n        tank.frictionY = 1;\n    };\n\n    // UP Key Release\n    w.release = () => {\n        if (!s.isDown) {\n            tank.accelerationY = 0;\n            tank.frictionY = tank.drag;\n        }\n    };\n\n    // RIGHT Key Press\n    d.press = () => {\n        tank.accelerationX = tank.speed;\n        tank.frictionX = 1;\n    };\n\n    // RIGHT Key Release\n    d.release = () => {\n        if (!w.isDown) {\n            tank.accelerationX = 0;\n            tank.frictionX = tank.drag;\n        }\n    };\n\n    // DOWN Key Press\n    s.press = () => {\n        tank.accelerationY = tank.speed;\n        tank.frictionY = 1;\n    };\n\n    // DOWN Key Release\n    s.release = () => {\n        if (!w.isDown) {\n            tank.accelerationY = 0;\n            tank.frictionY = tank.drag;\n        }\n    };\n\n\n\n\n    state = play;\n\n    // Start the game loop\n    gameLoop();\n\n}\n\nfunction gameLoop() {\n    requestAnimationFrame(gameLoop);\n    state();\n    renderer.render(stage);\n}\n\nfunction play() {\n    // Apply acceleration by adding the acceleration to the sprite's velocity\n    tank.vx += tank.accelerationX;\n    tank.vy += tank.accelerationY;\n\n    // Apply friction by multiplying sprite's velocity by the friction\n    tank.vx *= tank.frictionX;\n    tank.vy *= tank.frictionY;\n\n    // Gravity\n    tank.vy += 0.1;\n\n    // Apply the velocity to the sprite's position to make it move\n    tank.x += tank.vx;\n    tank.y += tank.vy;\n\n    let collision = contain(\n        tank, {\n            x: 0,\n            y: 0,\n            width: renderer.view.width,\n            height: renderer.view.height\n        }\n    );\n    if (collision) {\n        //Reverse the sprite's `vx` value if it hits the left or right\n        if (collision.has(\"left\") || collision.has(\"right\")) {\n            tank.vx = 0;\n        }\n        //Reverse the sprite's `vy` value if it hits the top or bottom\n        if (collision.has(\"top\") || collision.has(\"bottom\")) {\n            tank.vy = 0;\n        }\n    }\n\n    if(b.hitTestRectangle(tank, etank)){\n        console.log(\"Collision\");\n    }else{\n        console.log(\"No collision\");\n    }\n\n\n}\n\n//The `randomInt` helper function\nfunction randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\nwindow.addEventListener(\"resize\", event => {\n    scaleToWindow(renderer.view);\n});\n\nlet info = function () {\n    // Find the width and height of renderer\n    console.log(\"Renderer width: \" + renderer.view.width);\n    console.log(\"Renderer height: \" + renderer.view.height);\n\n    let scale = scaleToWindow(renderer.view);\n    // The ratio by which the canvas was scaled\n    console.log(\"The ratio by which the canvas was scaled is \" + scale);\n}\n\nfunction contain(sprite, container) {\n//Create a `Set` called `collision` to keep track of the //boundaries with which the sprite is colliding\n    var collision = new Set();\n//Left\n//If the sprite's x position is less than the container's x position, //move it back inside the container and add \"left\" to the collision Set\n    if (sprite.x < container.x) {\n        sprite.x = container.x;\n        collision.add(\"left\");\n    }\n    //Top\n    if (sprite.y < container.y) {\n        sprite.y = container.y;\n        collision.add(\"top\");\n    }\n//Right\n    if (sprite.x + sprite.width > container.width) {\n        sprite.x = container.width - sprite.width;\n        collision.add(\"right\");\n    }\n//Bottom\n    if (sprite.y + sprite.height > container.height) {\n        sprite.y = container.height - sprite.height;\n        collision.add(\"bottom\");\n    }\n    //If there were no collisions, set `collision` to `undefined`\n    if (collision.size === 0) collision = undefined;\n    //Return the `collision` value\n    return collision;\n}\n\n\ninfo();"]}